{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,IAAIC,EAAU,KACVC,EAAW,EAIL,IAAIC,SAAQ,CAACC,EAASC,KAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCP,EAAUQ,aAAY,KACpBP,GAAY,EAERI,EACFF,EAAQ,C,SAAEF,E,MAVF,MAYRG,EAAO,C,SAAEH,E,MAZD,MACC,IAaPA,GACFQ,cAAcT,E,GAfN,IAkBH,IAGTU,MAAK,EAAGC,SAAAC,EAAUC,MAAAC,MAClBC,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAqBL,QAAeE,OAC5DI,QAAQC,IAAI,uBAAqBP,QAAiBE,MAAU,IAC3DM,OAAM,EAAGT,SAAAU,EAAUR,MAAAS,MACpBP,EAAAjB,GAASkB,OAAOO,QAAQ,oBAAoBF,QAAeC,OAC3DJ,QAAQC,IAAI,sBAAoBE,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n\n// refs.form.addEventListener('submit', createPromise);\n\n// let timerId = null;\n// let position = 10;\n// const delay = Number(refs.form.elements.delay.value);\n\n// function createPromise() {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//     }\n//     reject({ position, delay });\n//   }, delay);\n// }\n\n// createPromise()\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nlet timerId = null;\nlet position = 0;\nconst delay = 1000;\nconst amount = 5;\n\nconst p = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n\n  timerId = setInterval(() => {\n    position += 1;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n    if (position === amount) {\n      clearInterval(timerId);\n      return;\n    }\n  }, delay);\n});\n\np.then(({ position, delay }) => {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}).catch(({ position, delay }) => {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$position","Promise","resolve","reject","shouldResolve","Math","random","setInterval","clearInterval","then","position","position1","delay","delay1","$parcel$interopDefault","Notify","success","console","log","catch","position2","delay2","failure"],"version":3,"file":"03-promises.aa8a4c04.js.map"}