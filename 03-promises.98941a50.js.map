{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAE/BH,EAAKC,KAAKG,iBAAiB,UAK3B,SAAuBC,GACrBA,EAAMC,iBACN,IAAMC,EAASC,OAAOR,EAAKC,KAAKQ,SAASF,OAAOG,OAC5CC,EAAQH,OAAOR,EAAKC,KAAKQ,SAASE,MAAMD,OACxCE,EAAO,EAEXC,EAAUC,aAAY,WAKpB,OAJAC,GAAY,EACZH,EAAOJ,OAAOR,EAAKC,KAAKQ,SAASG,KAAKF,OACtCC,GAASC,EAEF,IAAII,SAAQ,SAACC,EAASC,GAW3B,GAVsBC,KAAKC,SAAW,IAEpCH,EAAQ,qBAAoCI,OAAfN,EAAS,QAAYM,OAANV,EAAM,OAClDW,EAAAxB,GAASyB,OAAOC,QAAQ,qBAAoCH,OAAfN,EAAS,QAAYM,OAANV,EAAM,OAClEc,QAAQC,IAAI,uBAAwCL,OAAfN,EAAS,QAAYM,OAANV,EAAM,SAE1DO,EAAO,oBAAmCG,OAAfN,EAAS,QAAYM,OAANV,EAAM,OAChDW,EAAAxB,GAASyB,OAAOI,QAAQ,oBAAmCN,OAAfN,EAAS,QAAYM,OAANV,EAAM,OACjEc,QAAQC,IAAI,sBAAqCL,OAAfN,EAAS,QAAYM,OAANV,EAAM,QAErDI,IAAaR,EAGf,OAFAQ,EAAW,OACXa,cAAcf,E,MAIjBF,EAAQC,E,IA/Bb,IAAIC,EAAU,KACVE,EAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\nrefs.form.addEventListener('submit', createPromise);\n\nlet timerId = null;\nlet position = 0;\n\nfunction createPromise(event) {\n  event.preventDefault();\n  const amount = Number(refs.form.elements.amount.value);\n  let delay = Number(refs.form.elements.delay.value);\n  let step = 0;\n\n  timerId = setInterval(() => {\n    position += 1;\n    step = Number(refs.form.elements.step.value);\n    delay += step;\n\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      if (position === amount) {\n        position = 0;\n        clearInterval(timerId);\n        return;\n      }\n    });\n  }, delay + step);\n}\n\n// timerId = setInterval(() => {}, delay + step);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","amount","Number","elements","value","delay","step","$ce04d3a99e08e73b$var$timerId","setInterval","$ce04d3a99e08e73b$var$position","Promise","resolve","reject","Math","random","concat","$parcel$interopDefault","Notify","success","console","log","failure","clearInterval"],"version":3,"file":"03-promises.98941a50.js.map"}