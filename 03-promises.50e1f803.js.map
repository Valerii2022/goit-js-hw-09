{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,UAK3B,SAA2BC,GACzBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOR,EAAKC,KAAKQ,SAASC,MAAMC,OACtCC,EAASJ,OAAOR,EAAKC,KAAKQ,SAASG,OAAOD,OAC1CE,EAAOL,OAAOR,EAAKC,KAAKQ,SAASI,KAAKF,OAE5CG,YAAW,WACTC,EAAUC,aAAY,WAwB1B,IAAuBC,EAAUP,GAAVO,EAvBjBC,GAAY,EAuBeR,EArBHH,EAsBrB,IAAIY,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAP,EAAUP,UAEpBW,EAAO,CAAEG,SAAAP,EAAUP,S,KA1BhBe,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUd,EAAKgB,EAALhB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QACd,qBAAoCC,OAAfJ,EAAS,QAAYI,OAANrB,EAAM,OAE5CsB,QAAQC,IAAI,uBAAwCF,OAAfJ,EAAS,QAAYI,OAANrB,EAAM,M,IAE3DwB,OAAM,SAAAR,G,IAAGS,EAAQT,EAARF,SAAUd,EAAKgB,EAALhB,MAClBkB,EAAA9B,GAAS+B,OAAOO,QAAQ,oBAAmCL,OAAfI,EAAS,QAAYJ,OAANrB,EAAM,OACjEsB,QAAQC,IAAI,sBAAqCF,OAAfI,EAAS,QAAYJ,OAANrB,EAAM,M,IAGvDQ,GAAYN,GACdyB,cAActB,GAGhBR,GAASM,C,GACRA,E,GACFN,E,IA/BL,IAAIQ,EAAU,KACVG,EAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handleinputSubmit);\n\nlet timerId = null;\nlet position = 0;\n\nfunction handleinputSubmit(event) {\n  event.preventDefault();\n  let delay = Number(refs.form.elements.delay.value);\n  const amount = Number(refs.form.elements.amount.value);\n  const step = Number(refs.form.elements.step.value);\n\n  setTimeout(() => {\n    timerId = setInterval(() => {\n      position += 1;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      if (position == amount) {\n        clearInterval(timerId);\n      }\n\n      delay += step;\n    }, step);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","elements","delay","value","amount","step","setTimeout","$ce04d3a99e08e73b$var$timerId","setInterval","position3","$ce04d3a99e08e73b$var$position","Promise","resolve","reject","Math","random","position","then","param","position1","$parcel$interopDefault","Notify","success","concat","console","log","catch","position2","failure","clearInterval"],"version":3,"file":"03-promises.50e1f803.js.map"}