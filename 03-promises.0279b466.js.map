{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAmD3B,SAAuBC,GACrBA,EAAMC,gB,IA1BR,IAAIC,EAEEC,EAAW,EACTC,EAAQ,IAIVC,EAAI,IAAIC,SAAQ,SAACC,EAASC,GAC9B,IAAMC,EAAgBC,KAAKC,SAAW,GAGtCC,aAAY,WACVT,GAAY,EACXM,EACCF,EAAQ,CAAEM,SAAAV,EAAUW,MAAAV,IAEpBI,EAAO,CAAEK,SAAAV,EAAUW,MAAAV,G,GAEpBA,E,IAiBFF,EAAUU,aAAY,WAGvBP,EAAEU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALF,MACpBK,EAAAzB,GAAS0B,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,OAClEK,QAAQC,IAAI,uBAAwCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IACzDO,OAAM,SAAAT,G,IAAGU,EAAQV,EAARH,SAAUc,EAAKX,EAALF,MACpBK,EAAAzB,GAAS0B,OAAOQ,QAAQ,oBAAmCN,OAAfI,EAAS,QAAYJ,OAANK,EAAM,OACjEJ,QAAQC,IAAI,sBAAqCF,OAAfI,EAAS,QAAYJ,OAANK,EAAM,M,MAX1C,KA5BE,IA2CbxB,GACE0B,cAAc3B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', createPromise);\n\n// let timerId = null;\n// let position = 10;\n// const delay = Number(refs.form.elements.delay.value);\n\n// function createPromise() {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//     }\n//     reject({ position, delay });\n//   }, delay);\n// }\n\n// createPromise()\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nlet timerId = null;\n\n  let position = 0;\n  const delay = 1000;\n  const amount = 5;\n\n\nconst p = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n\n\n  setInterval(() => {\n    position += 1;\n if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay)\n   \n    \n\n\n});\n\nfunction createPromise(event) {\n  event.preventDefault();\n\n\n}\n\n\n  const step = 500;\n\n\n   timerId = setInterval(() => {\n    \n\n  p.then(({ position, delay }) => {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}).catch(({ position, delay }) => {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n});\n  }, step);\n\nif (position === amount) {\n      clearInterval(timerId);\n    }\n  \n  "],"names":["$6JpON","parcelRequire","form","document","querySelector","addEventListener","event","preventDefault","$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$p","Promise","resolve","reject","shouldResolve","Math","random","setInterval","position","delay","then","param","position1","delay1","$parcel$interopDefault","Notify","success","concat","console","log","catch","position2","delay2","failure","clearInterval"],"version":3,"file":"03-promises.0279b466.js.map"}