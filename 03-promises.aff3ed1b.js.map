{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,UAQ3B,SAA0BC,GACxBA,EAAMC,iBACNC,EAAQC,OAAOR,EAAKC,KAAKQ,SAASC,MAAMC,OAASH,OAAOR,EAAKC,KAAKQ,SAASG,KAAKD,OAEhFE,EAAUC,aAAY,KACpBC,EAASP,OAAOR,EAAKC,KAAKQ,SAASO,OAAOL,OAC1CM,GAAY,EACRA,GAAYF,GAChBG,cAAcL,GAEdM,QAAQC,IAAIL,EAAQE,EAAUV,EAAM,GACnCA,E,IAjBL,IAEIA,EAEAQ,EAJAF,EAAU,KAGVI,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', handleFormSubmit);\n\nlet timerId = null;\n\nlet delay;\nlet position = 0;\nlet amount;\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n  delay = Number(refs.form.elements.delay.value) + Number(refs.form.elements.step.value);\n  \n  timerId = setInterval(() => {\n    amount = Number(refs.form.elements.amount.value);\n    position += 1;\n    if (position == amount) {\n    clearInterval(timerId);\n  }\n    console.log(amount, position, delay)\n  }, delay);\n\n  \n }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// let delay = refs.form.elements.delay.value + refs.form.elements.step.value\n\n// timerId = setInterval(() => {\n// console.log('hi')\n// }, delay);\n\n// clearInterval(timerId);"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","event","preventDefault","$47d4ff9957288465$var$delay","Number","elements","delay","value","step","$47d4ff9957288465$var$timerId","setInterval","$47d4ff9957288465$var$amount","amount","$47d4ff9957288465$var$position","clearInterval","console","log"],"version":3,"file":"03-promises.aff3ed1b.js.map"}