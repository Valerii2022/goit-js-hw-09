{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAKzB,SAA2BC,GACzBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOP,EAAQQ,SAASF,MAAMG,OAC1C,MAAMC,EAAOH,OAAOP,EAAQQ,SAASE,KAAKD,OACpCE,EAASJ,OAAOP,EAAQQ,SAASG,OAAOF,OAE9CG,YAAW,KACTC,GAAY,EAEZC,EAAcD,EAAUP,GAAOS,KAAKC,GAAWC,MAAMC,GAEjDP,GAAU,EACZE,EAAW,EAIbM,EAAUC,aAAY,KACpBP,GAAY,EACZP,GAASI,EAETI,EAAcD,EAAUP,GAAOS,KAAKC,GAAWC,MAAMC,GAEjDL,GAAYF,IACdU,cAAcF,GACdN,EAAW,E,GAEZH,EAAK,GACPJ,E,IA/BL,IAAIa,EAAU,KACVN,EAAW,EAiCf,SAASC,EAAcQ,EAAUhB,GAC/B,OAAO,IAAIiB,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAN,E,MAAUhB,IAEpBmB,EAAO,CAAEG,SAAAN,E,MAAUhB,GAAQ,G,CAKjC,MAAMU,EAAY,EAAGY,SAAAC,EAAQvB,MAAEA,MAC7BwB,EAAAhC,GAASiC,OAAOC,QAAQ,qBAAqBH,QAAevB,OAC5D2B,QAAQC,IAAI,uBAAqBL,QAAiBvB,MAAU,EAGxDY,EAAU,EAAGU,SAAAO,EAAQ7B,MAAEA,MAC3BwB,EAAAhC,GAASiC,OAAOK,QAAQ,oBAAoBD,QAAe7B,OAC3D2B,QAAQC,IAAI,sBAAoBC,QAAe7B,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', handleinputSubmit);\n\nlet timerId = null;\nlet position = 0;\n\nfunction handleinputSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(formRef.elements.delay.value);\n  const step = Number(formRef.elements.step.value);\n  const amount = Number(formRef.elements.amount.value);\n\n  setTimeout(() => {\n    position += 1;\n\n    createPromise(position, delay).then(onSuccess).catch(onError);\n\n    if (amount <= 1) {\n      position = 0;\n      return;\n    }\n\n    timerId = setInterval(() => {\n      position += 1;\n      delay += step;\n\n      createPromise(position, delay).then(onSuccess).catch(onError);\n\n      if (position == amount) {\n        clearInterval(timerId);\n        position = 0;\n      }\n    }, step);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nconst onSuccess = ({ position, delay }) => {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onError = ({ position, delay }) => {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","addEventListener","event","preventDefault","delay","Number","elements","value","step","amount","setTimeout","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$onSuccess","catch","$47d4ff9957288465$var$onError","$47d4ff9957288465$var$timerId","setInterval","clearInterval","position1","Promise","resolve","reject","Math","random","position","position2","$parcel$interopDefault","Notify","success","console","log","position3","failure"],"version":3,"file":"03-promises.fd45bb20.js.map"}