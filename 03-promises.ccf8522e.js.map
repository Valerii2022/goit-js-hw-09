{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAKzB,SAA2BC,GACzBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOP,EAAQQ,SAASC,MAAMC,OAC1C,MAAMC,EAAOJ,OAAOP,EAAQQ,SAASG,KAAKD,OACpCE,EAASL,OAAOP,EAAQQ,SAASI,OAAOF,OAE9CG,YAAW,KACTC,GAAY,EAEZC,EAAcD,EAAUR,GACrBU,MAAK,EAAGC,SAAAC,EAAQT,MAAEA,MACjBU,EAAArB,GAASsB,OAAOC,QACd,qBAAqBH,QAAeT,OAEtCa,QAAQC,IAAI,uBAAqBL,QAAiBT,MAAU,IAE7De,OAAM,EAAGP,SAAAQ,EAAQhB,MAAEA,MAClBU,EAAArB,GAASsB,OAAOM,QAAQ,oBAAoBD,QAAehB,OAC3Da,QAAQC,IAAI,sBAAoBE,QAAiBhB,MAAU,IAG/DkB,EAAUC,aAAY,KACpBd,GAAY,EACZR,GAASK,EAETI,EAAcD,EAAUR,GACrBU,MAAK,EAAGC,SAAAY,EAAQpB,MAAEA,MACjBU,EAAArB,GAASsB,OAAOC,QACd,qBAAqBQ,QAAepB,OAEtCa,QAAQC,IAAI,uBAAqBM,QAAiBpB,MAAU,IAE7De,OAAM,EAAGP,SAAAa,EAAQrB,MAAEA,MAClBU,EAAArB,GAASsB,OAAOM,QAAQ,oBAAoBI,QAAerB,OAC3Da,QAAQC,IAAI,sBAAoBO,QAAerB,MAAU,IAGzDK,GAAYF,EAAS,IACvBmB,cAAcJ,GACdb,EAAW,E,GAGZH,EAAK,GAEPL,E,IAhDL,IAAIqB,EAAU,KACVb,EAAW,EAkDf,SAASC,EAAciB,EAAUvB,GAC/B,OAAO,IAAIwB,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEjB,SAAAe,E,MAAUvB,IAEpB0B,EAAO,CAAElB,SAAAe,E,MAAUvB,GAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', handleinputSubmit);\n\nlet timerId = null;\nlet position = 0;\n\nfunction handleinputSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(formRef.elements.delay.value);\n  const step = Number(formRef.elements.step.value);\n  const amount = Number(formRef.elements.amount.value);\n  \n  setTimeout(() => {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    timerId = setInterval(() => {\n      position += 1;\n      delay += step;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      if (position == amount - 1) {\n        clearInterval(timerId);\n        position = 0;\n      }\n\n    }, step);\n\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","addEventListener","event","preventDefault","delay1","Number","elements","delay","value","step","amount","setTimeout","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","then","position","position1","$parcel$interopDefault","Notify","success","console","log","catch","position2","failure","$47d4ff9957288465$var$timerId","setInterval","position3","position4","clearInterval","position5","Promise","resolve","reject","Math","random"],"version":3,"file":"03-promises.ccf8522e.js.map"}